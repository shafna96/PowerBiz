// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Company {
    id                          Int                           @id @default(autoincrement()) //pk
    company_code                String                        @unique @db.VarChar(100)
    company_name                String                        @unique @db.VarChar(100)
    //COMMON FIELDS
    created_date_time           DateTime                      @default(now())
    created_pc_id               String                        @db.VarChar(45)
    modified_pc_id              String                        @db.VarChar(45)
    User                        User[]
    UserGroup                   UserGroup[]
    UserGroupNavigation         UserGroupNavigations[]
    UserGroupSegmentRestriction UserGroupSegmentRestriction[]
}

model User {
    id                  Int      @id @default(autoincrement()) //pk
    company_id          Int //FK
    company             Company  @relation(fields: [company_id], references: [id])
    user_name           String   @db.VarChar(45)
    first_name          String   @db.VarChar(45)
    last_name           String   @db.VarChar(45)
    display_name        String   @db.VarChar(45)
    user_img            String   @db.VarChar(100)
    email               String   @unique @db.VarChar(100)
    password            String   @db.VarChar(45)
    is_active           Boolean
    no_of_login_attempt Int
    is_login_locked     Boolean
    //COMMON FIELDS
    created_user_id     Int //FK
    created_date_time   DateTime @default(now())
    created_pc_id       String   @db.VarChar(45)
    modified_pc_id      String   @db.VarChar(45)
    //  employeeId          Int
    //  employee            Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

//to be migrate

model UserGroup {
    id                          Int                           @id @default(autoincrement()) //pk
    company_id                  Int //FK
    company                     Company                       @relation(fields: [company_id], references: [id])
    user_group_name             String                        @db.VarChar(45)
    //COMMON FIELDS
    created_user_id             Int //FK
    created_date_time           DateTime                      @default(now())
    created_pc_id               String                        @db.VarChar(45)
    modified_pc_id              String                        @db.VarChar(45)
    UserGroupNavigation         UserGroupNavigations[]
    UserGroupSegmentRestriction UserGroupSegmentRestriction[]
}

model Module {
    id                Int          @id @default(autoincrement()) //PK
    module_name       String       @db.VarChar(45)
    //COMMON FIELDS
    created_user_id   Int //FK
    created_date_time DateTime     @default(now())
    created_pc_id     String       @db.VarChar(45)
    modified_pc_id    String       @db.VarChar(45)
    Navigation        Navigation[]
}

model Navigation {
    id                  Int                    @id @default(autoincrement()) //PK
    module_id           Int //FK
    module              Module                 @relation(fields: [module_id], references: [id])
    navigation_name     String                 @db.VarChar(45)
    master              Navigation?            @relation("MasterToNavigation", fields: [master_id], references: [id])
    master_id           Int?
    level_no            Int
    short_order         Int
    page_url            String                 @db.VarChar(45) //??
    page_title          String                 @db.VarChar(45)
    page_icon           String                 @db.VarChar(45)
    is_active           Boolean
    is_basic            Boolean
    is_final            Boolean
    //COMMON FIELDS
    created_user_id     Int //FK
    created_date_time   DateTime               @default(now())
    created_pc_id       String                 @db.VarChar(45)
    modified_pc_id      String                 @db.VarChar(45)
    UserGroupNavigation UserGroupNavigations[]
    Template            Template[]
    navigations         Navigation[]           @relation("MasterToNavigation")
}

model UserGroupNavigations {
    id                Int        @id @default(autoincrement()) //PK
    user_group_id     Int //FK
    userGroup         UserGroup  @relation(fields: [user_group_id], references: [id])
    navigation_id     Int //FK
    navigation        Navigation @relation(fields: [navigation_id], references: [id])
    company_id        Int //FK
    company           Company    @relation(fields: [company_id], references: [id])
    is_view           Boolean
    is_edit           Boolean
    is_delete         Boolean
    is_create         Boolean
    is_print          Boolean
    is_sub_exist      Boolean
    //COMMON FIELDS
    created_user_id   Int //FK
    created_date_time DateTime   @default(now())
    created_pc_id     String     @db.VarChar(45)
    modified_pc_id    String     @db.VarChar(45)
}

model UserGroupSegmentRestriction {
    id                Int       @id @default(autoincrement()) //PK
    user_group_id     Int //FK
    userGroup         UserGroup @relation(fields: [user_group_id], references: [id])
    //segment_id fk
    company_id        Int //FK
    company           Company   @relation(fields: [company_id], references: [id])
    //COMMON FIELDS
    created_user_id   Int //FK
    created_date_time DateTime  @default(now())
    created_pc_id     String    @db.VarChar(45)
    modified_pc_id    String    @db.VarChar(45)
}

model Template {
    id                Int        @id @default(autoincrement()) //PK
    navigation_id     Int //FK
    navigation        Navigation @relation(fields: [navigation_id], references: [id])
    page_url          String     @db.VarChar(45)
    is_default        Boolean
    //COMMON FIELDS
    created_user_id   Int //FK
    created_date_time DateTime   @default(now())
    created_pc_id     String     @db.VarChar(45)
    modified_pc_id    String     @db.VarChar(45)
}

//Int //length 11
//short code 12
//system g.code 16-20
